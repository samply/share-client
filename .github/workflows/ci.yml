# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build with maven and docker

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project: gbn
            project_context: samply
            maven_profile: samply
          - project: dktk
            project_context: dktk
            maven_profile: dktk
          - project: c4
            project_context: dktk
            maven_profile: dktk
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: share-client-build
          POSTGRES_USER: share-client-build
          POSTGRES_PASSWORD: share-client-build
          POSTGRES_HOST: localhost
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Build with Maven
        run: mvn -B package -P ${{matrix.maven_profile}},ci-override

      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            PROJECT=${{matrix.project_context}}
          load: true
          tags: share-client

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'share-client'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          context: .
          build-args: |
            PROJECT=${{matrix.project_context}}
          push: true
          labels: ${{ steps.docker-meta.outputs.labels }}
          tags: ${{ steps.docker-meta.outputs.tags }}
